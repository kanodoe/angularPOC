/*
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/T-Systems-MMS/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */

import { ValidatorFn, Validators } from '@angular/forms';
import { BaseFormControlFactory } from 'openapi-typescript-angular-generator';



export interface User { 
    id?: number;
    username?: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    password?: string;
    phone?: string;
    /**
     * User Status
     */
    userStatus?: number;
}

/**
 * Namespace for property- and property-value-enumerations of User.
 */
export namespace User {
    /**
     * All properties of User.
     */
    export enum Properties {
        id = 'id',
        username = 'username',
        firstName = 'firstName',
        lastName = 'lastName',
        email = 'email',
        password = 'password',
        phone = 'phone',
        /**
         * User Status
         */
        userStatus = 'userStatus'
    }

    /**
    * A map of tuples with error name and `ValidatorFn` for each property of User.
    */
    export const ModelValidators: {[K in keyof User]: [string, ValidatorFn][]} = {
        id: [
        ],
        username: [
        ],
        firstName: [
        ],
        lastName: [
        ],
        email: [
        ],
        password: [
        ],
        phone: [
        ],
        userStatus: [
        ],
    };

    /**
    * The FormControlFactory for User.
    */
    export class FormControlFactory extends BaseFormControlFactory<User> {

        /**
         * Constructor.
         *
         * @param model An existing model for User.
         *              If given, all form-controls of the factory automatically have the value of this model. If this
         *              model is not given, all values are `null`.
         */
        constructor(
          model: User = {
            id: null,
            username: null,
            firstName: null,
            lastName: null,
            email: null,
            password: null,
            phone: null,
            userStatus: null,
          }
        ) {
            super(model, User.ModelValidators);
        }
    }

}


