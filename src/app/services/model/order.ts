/*
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/T-Systems-MMS/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */

import { ValidatorFn, Validators } from '@angular/forms';
import { BaseFormControlFactory } from 'openapi-typescript-angular-generator';



export interface Order { 
    id?: number;
    petId?: number;
    quantity?: number;
    shipDate?: Date;
    /**
     * Order Status
     */
    status?: Order.StatusEnum;
    complete?: boolean;
}

/**
 * Namespace for property- and property-value-enumerations of Order.
 */
export namespace Order {
    /**
     * All properties of Order.
     */
    export enum Properties {
        id = 'id',
        petId = 'petId',
        quantity = 'quantity',
        shipDate = 'shipDate',
        /**
         * Order Status
         */
        status = 'status',
        complete = 'complete'
    }

    /**
     * All possible values of status.
     */
    export enum StatusEnum {
        Placed = 'placed',
        Approved = 'approved',
        Delivered = 'delivered'
    }

    /**
    * A map of tuples with error name and `ValidatorFn` for each property of Order.
    */
    export const ModelValidators: {[K in keyof Order]: [string, ValidatorFn][]} = {
        id: [
        ],
        petId: [
        ],
        quantity: [
        ],
        shipDate: [
        ],
        status: [
        ],
        complete: [
        ],
    };

    /**
    * The FormControlFactory for Order.
    */
    export class FormControlFactory extends BaseFormControlFactory<Order> {

        /**
         * Constructor.
         *
         * @param model An existing model for Order.
         *              If given, all form-controls of the factory automatically have the value of this model. If this
         *              model is not given, all values are `null`.
         */
        constructor(
          model: Order = {
            id: null,
            petId: null,
            quantity: null,
            shipDate: null,
            status: null,
            complete: null,
          }
        ) {
            super(model, Order.ModelValidators);
        }
    }

}


